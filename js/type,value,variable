#type
>原始类型 primitive type
>>数字 number:全部数字为64位浮点格式数字，范围：-2^53~2^53.注意js实际的操作基于32位整数
>>>特殊数字：NaN 与任何数字都不相等（包括他自己）。判断数字是否为NaN,x!=x 为true说明x为NaN.
>>字符串 string:
>>布尔值 boolean
>>空 null
>>未定义 undefined
>对象类型 object type
  数字，字符串，布尔值都是原始类型，不具有属性。之所以在使用时可以用过 . [] 获取到它的属性是因为没次通过引用读取原始类型时临时将它包装成对象类型，然后读取属性，并且用完就丢弃。每次通过引用使用原始类型时都是一个新的对象。
  验证代码：var s = "abc";s.len = 10;var x = s.len;x-->undefined
  包装对象非实际意义上的对象，var s = "abc";var S = new String(s);s === S --->false
#variable
* 不使用var来生命变量对变量直接赋值时，变量将变为全局变量。
* javascript不具有块级作用域，取而代之的是函数作用域。
* 函数作用域：在函数内申明的所有变量在函数体内始终可见。
* 申明提前：javascript申明的所有变量被提前至函数体的顶部。申明提前在JS引擎'预编译'期间进行的，在执行之前。
* 经过var申明的变量不能用delete删除
* 全局变量为global的属性，函数内申明的局部变量为申明上下文对象（decalarative environment object）的属性，对外具有不可见性。
* 作用域链：？